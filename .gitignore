# .gitignore for .NET and Blazor Projects

# Purpose:
# This file tells Git which untracked files to ignore.
# It's generally used to avoid committing generated files,
# temporary files, local configuration, or sensitive data.

# User-specific files
*.DS_Store
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn][36][24]/
[Aa][Rr][Mm]/
[Aa][Rr][Mm][64]/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# JetBrains Rider
.idea/
*.iml

# Visual Studio
.vs/
ProjectSettings/ # Unity
Thumbs.db
# Visual Studio symbol files
*.pdb
*.ilk
*.meta
*.obj
*.pch
*.unityproj
*.suo
*.tmp
*.log
*.vspscc
*.vssscc
.builds

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if you are using a packages directory instead of global GAC
#!**/packages/*

# Dotnet User Secrets
secrets.json
**/secrets.json

# Dotnet Environment Tag Helper
*.Generated.cs

# Microsoft User Secrets (older format)
**/App_Data/ASP.NET/Identity/secrets.json

# Local app settings
appsettings.Local.json
appsettings.*.Local.json

# Client-side build output (if you're using tools like Webpack, Parcel, etc., that output to wwwroot)
# Adjust this if your output directory is different
wwwroot/dist/

# LibMan (if you use it to manage client-side libraries)
wwwroot/lib/

# Test results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.VisualState.xml
TestResult.xml
*.trx

# Dotnet Tooling
.store/

# Dotnet Ef Tooling
**/[Mm]igrations/*.Designer.cs
**/[Mm]igrations/*.Designer.vb

# Output of 'dotnet publish' (often built in CI/CD or Docker, not committed)
publish/
**/publish/

# Rider Code Coverage
*.dotCover

# NCrunch
_NCrunch_*/
.*crunch*.local.xml

# BenchmarkDotNet
BenchmarkDotNet.Artifacts/

# Service Fabric
[Ss]fg[Pp]ublish[Pp]rofiles/
Backup/
[Tt]est[Rr]esults/

# StyleCop
StyleCopReport.xml

# FAKE - F# Make
.fake/

# Paket dependency manager
.paket/paket.exe
paket-files/

# FSharp
[Oo]bj/FSI/
FSharp.Compiler.Tools*/

# PowerShell module builds
**/[Mm]odule[Bb]uild[Ll]og.*

# ReSharper
_ReSharper*/
*.[Rr]e[Ss]harper

# MonoDevelop
*.pidb
*.userprefs

# Mac
.DS_Store

# Node.js (if you integrate Node.js build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json # Often committed, but can be ignored if yarn.lock or pnpm-lock.yaml is used
yarn.lock         # Often committed
pnpm-lock.yaml    # Often committed

# Environment files
.env
.env.*
!.env.example
